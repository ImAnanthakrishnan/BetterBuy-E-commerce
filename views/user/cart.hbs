<div class="container-fluid" style="background-color: lightgreen;min-height:150vh">
    <div class="row cart">
        <div class="col-md-10 col-11 mx-auto">
            <div class="row mt-5 gx-3">
                <!-- Left side div -->
                <div class="col-md-12 col-lg-8 col-11 mx-auto main-cart mb-lg-0 mb-5 shadow">
                    <div class="card p-4" >
                        <h2 class="py-4 font-weight-bold">Cart</h2>
                        <div class="row">
                            {{#if message}}
                            <div class="alert alert-danger alert-dismissible fade show" role="alert">
                                <strong>{{message}}</strong>
                                <a class="text-decoration-none" href="/All">Purchase</a>
                                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                            </div>
                            {{/if}}
                            {{#each cart}}
                            {{#each this.product}}
                            {{#if this.productId.images}}
                            <div class="col-md-5 col-11 mx-auto bg-light d-flex justify-content-center align-items-center shadow product_img mb-3 mb-sm-2">
                                <img src="images/{{this.productId.images.[0]}}" class="img-fluid" alt="cart image">
                            </div>
                            {{/if}}
                            <div class="col-md-7 col-11 mx-auto px-4 mb-3 mb-sm-5 mt-2">
                                <div class="row">
                                    <!--product name-->
                                    <div class="col-6 card-title">
                                        <h1 class="mb-4 product name">{{this.productId.name}}</h1>
                                        <p class="mb-2">Description : {{this.productId.description}}</p>
                                        <p class="mb-2">Status : {{this.productId.status}}</p>
                                        <p class="mb-2">Quantity : {{this.quantity}}</p>
                                    </div>
                                    <!--quantity inc desc-->
                                    <div class="col-6">
                                        <ul class="pagination justify-content-end set_quantity">
                                            <!-- Your quantity buttons code -->
                                                 {{#if this.productId.is_cancelled}}
                                              <li class="page-item"><button disabled class="page-link decrease-btn"   data-product-id="{{this.productId._id}}" data-price="{{this.price}}" data-product-price="{{this.productId.price}}" data-action="desc"><i class="fa-solid fa-minus"></i></button></li>
                                            {{else}}
                                              <li class="page-item"><button class="page-link decrease-btn"   data-product-id="{{this.productId._id}}" data-price="{{this.price}}" data-product-price="{{this.productId.price}}" data-action="desc"><i class="fa-solid fa-minus"></i></button></li>
                                            {{/if}}
                                           <input type="hidden" name="" class="page-link" value="{{this.name}}" id="nameInput_{{this.productId._id}}">
                                            <li class="page-item"><input type="text" name="" class="page-link" value="{{this.quantity}}" id="quantityInput_{{this.productId._id}}" min="1" readonly></li>
                                            {{#if this.productId.is_cancelled}}
                                                <li class="page-item"><button disabled class="page-link increase-btn"  data-product-id="{{this.productId._id}}" data-price="{{this.price}}" data-product-price="{{this.productId.price}}" data-action="inc"><i class="fa-solid fa-plus"></i></button></li>
                                            {{else}}
                                                <li class="page-item"><button class="page-link increase-btn"  data-product-id="{{this.productId._id}}" data-price="{{this.price}}" data-product-price="{{this.productId.price}}" data-action="inc"><i class="fa-solid fa-plus"></i></button></li>
                                            {{/if}}
                                           
                                        </ul>
                                    </div>
                                </div>
                                <!--remove move and price-->
                                <div class="row">
                                    <div class="col-8 d-flex justify-content-between remove_wish">
                                        <a href="" class="text-decoration-none text-danger" onclick="productToDelete(event,'{{this.productId._id}}','{{this.quantity}}')">
                                            <i class="fa-solid fa-trash-alt"></i>REMOVE ITEM
                                        </a>
                                    </div>
                                    <div class="col-4 d-flex justify-content-end price_money">
                                        <h3><span class="itemval1" data-product-id="{{this.productId._id}}">{{this.price}}/-</span></h3>
                                    </div>
                                </div>
                                <div id="error_true" class="text-danger"></div>
                            </div>
                            <hr>
                            {{/each}}
                            {{/each}}
                        </div>
                    </div>
                </div>

                <!-- Right side div -->
                <div class="col-md-12 col-lg-4 col-11 mx-auto mt-lg-0 mt-md-5 order-first order-md-last">
                    <div class="right_side p-3 shadow bg-white">
                        <h2 class="product_name mb-5">Total amount</h2>
                        {{#each cart}}
                        {{#each this.product}}
                        <div class="price_indiv d-flex justify-content-between">
                            <p>{{this.productId.name}}</p>
                            <p><span class="itemval2" data-product-id="{{this.productId._id}}">{{this.price}}/-</span></p>
                        </div>
                        {{/each}}
                        {{/each}}
                        <hr/>
                        <div class="total-amt d-flex justify-content-between font-weight-bold">
                            <p>Total amount </p>
                            {{#each cart}}
                            {{#if this.product}}
                            <p><span id="total_cart_amt">{{this.totalPrice}}/-</span></p>
                            {{else}}
                            <p><span id="total_cart_amt">0</span></p>
                            {{/if}}
                            {{/each}}
                        </div>
                        <a class="text-decoration-none" href="/checkout">
                            <button class="btn btn-primary text-uppercase">Checkout</button>
                        </a> 
                    </div>

                    <div class="discount_code mt-3 shadow mb-3">
                        <div class="card">
                            <div class="card-body">
                                <a class="d-flex justify-content-between text-decoration-none" data-bs-toggle="collapse" data-bs-target="#collapseExample" aria-expanded="false" aria-controls="collapseExample">
                                    Add a discount code (optional)
                                    <span><i class="fa-solid fa-chevron-down pt1"></i></span>
                                </a>
                                <div class="collapse" id="collapseExample">
                                    <div class="mt-3">
                                        <input type="text" name="coupon" id="discount_code1" class="form-control font-weight-bold" placeholder="Enter discount code">
                                        {{#each cart}}
                                        <input type="hidden" name="total" id="total" class="form-control font-weight-bold" value="{{this.totalPrice}}">
                                        {{/each}}
                                        <small id="error_true1" class="text-danger mt-3"></small>
                                    </div>
                                    <button class="btn btn-primary btn-sm mt-3" onclick="applyDiscountCode(event)">Apply</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

 <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL" crossorigin="anonymous"></script>
<script >

    async function applyDiscountCode(event) {
        try{

        const discountCode = document.getElementById('discount_code1').value;
         const total = document.getElementById('total').value;
    
         const requestBody = {
            coupon:discountCode,
            total
         };

        const response =  await fetch('/verifyCoupon',{
            method:'POST',
            headers:{
                'Content-Type':'application/json'
            },
            body:JSON.stringify(requestBody)
         });
            const errorTrueElement = document.getElementById('error_true1');
        if(response.ok){
            
                const result = await response.json();
                console.log(result.message);
                window.location.reload();
              
            }else{
                 const result = await response.json();
                  console.log(result.message);
                errorTrueElement.textContent = result.message;
            
            }
        }
        catch(error){
            console.log('Error:',error);
        }
      
    }
 
 document.addEventListener('DOMContentLoaded', function () {
    const decreaseButtons = document.querySelectorAll('.decrease-btn');
    const increaseButtons = document.querySelectorAll('.increase-btn');

    decreaseButtons.forEach(function (button) {
        button.addEventListener('click', function () {
            const productId = button.dataset.productId;
            const price = button.dataset.price;
            const productPrice = button.dataset.productPrice;
            const action = button.dataset.action;
            console.log(`Decrease clicked for productId: ${productId}`);
            decreseNumber(productId, price, productPrice,action);
        });
    });

    increaseButtons.forEach(function (button) {
        button.addEventListener('click', function () {
            const productId = button.dataset.productId;
            const price = button.dataset.price;
            const productPrice = button.dataset.productPrice;
            const action = button.dataset.action;
            console.log(`Increase clicked for productId: ${productId}`);
            increaseNumber(productId, price, productPrice,action);
        });
    });
});



      const increaseNumber = (productId,price,productPrice,action)=>{
       const quantityInput = document.getElementById(`quantityInput_${productId}`);
       const nameInput = document.getElementById(`nameInput_${productId}`).value;
       console.log(nameInput)
       const currentQuantity = parseInt(quantityInput.value,10);
       console.log(productPrice)
       const priceInput = parseFloat(price);
      const proPrice = parseFloat(productPrice);
    
     
       const newQuanity = currentQuantity + 1;
      
      const Price = priceInput + proPrice;
     console.log(Price)
       updateQuantity(productId,newQuanity,Price,action,nameInput);
    }

        const decreseNumber = (productId,price,productPrice,action)=>{
     const quantityInput = document.getElementById(`quantityInput_${productId}`)
     const nameInput = document.getElementById(`nameInput_${productId}`).value;
     const currentQuantity = parseInt(quantityInput.value, 10);
     console.log(productPrice)
      const priceInput = parseFloat(price);
      const proPrice = parseFloat(productPrice);
    
         if (currentQuantity > 1 ) {
        const newQuanity = currentQuantity - 1;
      
        const Price = priceInput - proPrice;
        console.log(Price)
        updateQuantity(productId, newQuanity,Price,action,nameInput);
        }
     }



    async function updateQuantity(productId,newQuanity,Price,action,nameInput){
        try{
         
         console.log(nameInput)
            const response = await fetch('/update-cart',{
                method:'POST',
                headers:{
                    'Content-Type':'application/json'
                },
                body:JSON.stringify({
                    userId:'{{userId}}',
                    productId,
                    quantity:newQuanity,
                    price:Price,
                    action,
                    nameInput
                })
            });
 const errorTrueElement = document.getElementById('error_true');
            if(response.ok){
                const result = await response.json();
                const updatedCart = result.updatedCart;
                const updatedProduct = updatedCart.product.find(product=>product.productId === productId)
               
                 const quantityInput = document.getElementById(`quantityInput_${productId}`);
                 quantityInput.value = updatedProduct.quantity;
                
             const priceElements = document.querySelectorAll('.itemval1');
                //const productElementId = priceElements.dataset.productId;
              console.log(priceElements)
                 //console.log(productElementId)
             priceElements.forEach((element) => {
                 const productElementId = element.dataset.productId;
               
                 if (productElementId === productId) {
                        element.textContent = updatedProduct.price;
                 }
            });
            
                const priceElements1 = document.querySelectorAll('.itemval2');
                //const productElementId = priceElements.dataset.productId;
            
                 //console.log(productElementId)
             priceElements1.forEach((element) => {
                 const productElementId1 = element.dataset.productId;
               
                 if (productElementId1 === productId) {
                        element.textContent = updatedProduct.price;
                 }
            });
                /*const priceElements1 = document.getElementById('itemval2')
                 const productElementId1 = priceElements1.dataset.productId;
                 /* if (productElementId1 === productId) {
                        priceElements1.textContent = updatedProduct.price
                 }*/
                
                 
           /* priceElements1.forEach((element) => {
                 const productElementId1 = element.dataset.productId;
                 if (productElementId1 === productId) {
                        element.textContent = updatedProduct.price;
                 }
            });*/
                const totalPriceElement = document.getElementById('total_cart_amt');
                totalPriceElement.textContent = updatedCart.totalPrice;

                window.location.reload();
            }else{
                const result = await response.json();
                console.log('Failed to update');
                 showDynamicModal(result.error);
               // errorTrueElement.textContent = result.error
            }
        }
        catch(error){
            console.log('Error:',error);
        }
    }

 function showDynamicModal(message) {
    // Create a modal element
    const modal = document.createElement('div');
    modal.className = 'modal fade';
    modal.innerHTML = `
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h1 class="modal-title fs-5" id="exampleModalLabel">Message</h1>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    ${message}
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Ok</button>

                </div>
            </div>
        </div>
    `;

    // Append the modal to the body
    document.body.appendChild(modal);
    // Show the modal without jQuery
    modal.classList.add('show');
    modal.style.display = 'block';

    // Add an event listener for closing the modal
    const closeModalButton = modal.querySelector('[data-bs-dismiss="modal"]');
    closeModalButton.addEventListener('click', function () {
              //modal.classList.remove('show');
      //  modal.style.display = 'none';
closeModal();
        // Remove the modal from the DOM after it's hidden
       // document.body.removeChild(modal);
    });
        const okButton = modal.querySelector('.modal-footer .btn-secondary');
    okButton.addEventListener('click', function () {
        closeModal();
    });
    function closeModal() {
        // Hide the modal
        modal.classList.remove('show');
        modal.style.display = 'none';

        // Remove the modal from the DOM after it's hidden
        document.body.removeChild(modal); 
    }
}


async function productToDelete(event,productId,quantity){
    try{
        console.log('helo')
         var result = confirm('Are you sure?');
    if(result == false){
      event.preventDefault()
    }
     const response = await fetch('/delete-product',{
                method:'PATCH',
                headers:{
                    'Content-Type':'application/json'
                },
                body:JSON.stringify({
                    userId:'{{userId}}',
                    productId,
                    quantity
                   
                })
            });
            if(response.ok){
                const result = await response.json();
                window.location.reload();
              
            }else{
                console.log('Failed to delete')
            }
    }catch(error){
                    console.log('Error:',error);
    }
}

   /* function toggleDiscountCode() {
        const collapseElement = document.getElementById('collapseExample');
        const expanded = collapseElement.classList.contains('show');
        if (expanded) {
            collapseElement.classList.remove('show');
        } else {
            collapseElement.classList.add('show');
        }
         //const collapseElement = new bootstrap.Collapse(document.getElementById('collapseExample'));
        //collapseElement.toggle();

    }*/

     
</script>